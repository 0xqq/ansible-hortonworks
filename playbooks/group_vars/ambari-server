---
ambari_admin_user: 'admin'
ambari_admin_password: 'admin'
wait: true                                                      # wait for the cluster to finish installing
wait_timeout: 3600                                              # 60 minutes

default_password: 'AsdQwe123456'                                # a default password for all required passwords which are not specified in the blueprint
config_recommendation_strategy: 'NEVER_APPLY'

cluster_template_file: 'cluster_template.j2'                    # the cluster creation template file


############################
## database configuration ##
############################

database: 'embedded'                                            # can be set to 'embedded', 'postgres', 'mysql' or 'mariadb'
database_options:
  external_hostname: ''                                         # if this is empty, Ansible will install and prepare the databases on the ambari-node
  ambari_db_name: 'ambari'
  ambari_db_username: 'ambari'
  ambari_db_password: 'bigdata'
  hive_db_name: 'hive'
  hive_db_username: 'hive'
  hive_db_password: 'hive'
  oozie_db_name: 'oozie'
  oozie_db_username: 'oozie'
  oozie_db_password: 'oozie'
  rangeradmin_db_name: 'ranger'
  rangeradmin_db_username: 'ranger'
  rangeradmin_db_password: 'ranger'


############################
## security configuration ##
############################

security: 'none'                                                # can be set to 'none', 'mit-kdc' or 'active-directory'
security_options:
  external_hostname: ''                                         # if this is empty, Ansible will install and prepare the MIT KDC on the Ambari node
  realm: 'EXAMPLE.COM'
  admin_principal: 'admin'                                      # the Kerberos principal that has the permissions to create new users (don't append the realm)
  admin_password: 'AsdQwe123'
  kdc_master_key: 'AsdQwe123'                                   # only used when security is set to 'mit-kdc'
  ldap_url: 'ldaps://ad.example.com:636'                        # only used when security is set to 'active-directory'
  container_dn: 'OU=hadoop,DC=example,DC=com'                   # only used when security is set to 'active-directory'


##########################
## ranger configuration ##
##########################

ranger_options:                                                 # only used if RANGER_ADMIN is part of the blueprint stack
  ranger_admin_password: 'admin'                                # the password for the Ranger admin users (both admin and amb_ranger_admin)
  enable_plugins: yes                                           # set to 'yes' if the plugins should be enabled for all of the installed services


#############################
## blueprint configuration ##
#############################

blueprint_name: 'mytestcluster_blueprint'                       # the name of the blueprint as it will be stored in Ambari
blueprint_file: 'blueprint_dynamic.j2'                          # the blueprint JSON file - 'blueprint_dynamic.j2' is a Jinja2 template that generates the required JSON
blueprint_dynamic:                                              # properties for the dynamic blueprint - these are only used by the 'blueprint_dynamic.j2' template to generate the JSON
  - group: "mytestcluster-master"
    clients: ['ZOOKEEPER_CLIENT', 'HDFS_CLIENT', 'YARN_CLIENT', 'MAPREDUCE2_CLIENT', 'TEZ_CLIENT', 'SLIDER', 'PIG', 'SQOOP', 'HIVE_CLIENT', 'HCAT', 'OOZIE_CLIENT', 'INFRA_SOLR_CLIENT', 'SPARK2_CLIENT']
    services:
      - ZOOKEEPER_SERVER
      - NAMENODE
      - SECONDARY_NAMENODE
      - RESOURCEMANAGER
      - APP_TIMELINE_SERVER
      - HISTORYSERVER
      - SPARK2_JOBHISTORYSERVER
      - HIVE_SERVER
      - HIVE_METASTORE
      - WEBHCAT_SERVER
      - OOZIE_SERVER
      - AMBARI_SERVER
      - INFRA_SOLR
      - METRICS_COLLECTOR
      - METRICS_GRAFANA
      - METRICS_MONITOR
  - group: "mytestcluster-slave"
    clients: ['ZOOKEEPER_CLIENT', 'HDFS_CLIENT', 'YARN_CLIENT', 'MAPREDUCE2_CLIENT', 'TEZ_CLIENT', 'SLIDER', 'PIG', 'SQOOP', 'HIVE_CLIENT', 'HCAT', 'OOZIE_CLIENT', 'INFRA_SOLR_CLIENT', 'SPARK2_CLIENT']
    services:
      - DATANODE
      - NODEMANAGER
      - METRICS_MONITOR
