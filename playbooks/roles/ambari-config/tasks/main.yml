---
- name: Load variables
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_os_family|lower }}-{{ ansible_distribution|lower }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_os_family|lower }}-{{ ansible_distribution|lower }}.yml"
        - "{{ ansible_os_family|lower }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_os_family|lower }}.yml"
        - defaults.yml
      paths:
        - ../vars

- block:
    - name: "Modify the HDP base_url repository for HDP {{ hdp_minor_version }}"
      uri:
        url: http://{{ ansible_fqdn }}:8080/api/v1/stacks/HDP/versions/{{ hdp_minor_version }}/{{ main_os_target }}/repositories/HDP-{{ hdp_minor_version }}
        method: PUT
        force_basic_auth: yes
        user: "{{ ambari_admin_user }}"
        password: "{{ ambari_admin_password }}"
        headers: '{"X-Requested-By":"ambari"}'
        body: " {\"Repositories\" : { \"base_url\" : \"{{ hdp_main_repo_url }}\", \"verify_base_url\": true } }"
        body_format: raw
        status_code: 200,201,202
        return_content: no

    - name: "Modify the HDP-UTILS base_url repository for HDP {{ hdp_minor_version }}"
      uri:
        url: http://{{ ansible_fqdn }}:8080/api/v1/stacks/HDP/versions/{{ hdp_minor_version }}/{{ utils_os_target }}
        method: PUT
        force_basic_auth: yes
        user: "{{ ambari_admin_user }}"
        password: "{{ ambari_admin_password }}"
        headers: '{"X-Requested-By":"ambari"}'
        body: " {\"Repositories\" : { \"base_url\" : \"{{ utils_repo_url }}\", \"verify_base_url\": true } }"
        body_format: raw
        status_code: 200,201,202
        return_content: no

    - name: â€‹Enable User Home Directory Creation
      lineinfile:
        dest: /etc/ambari-server/conf/ambari.properties
        state: present
        line: "{{ item }}"
      notify: Restart ambari-server
      with_items:
        - "ambari.post.user.creation.hook.enabled=true"
        - "ambari.post.user.creation.hook=/var/lib/ambari-server/resources/scripts/post-user-creation-hook.sh"
  when: install_hdp is defined and install_hdp

- block:
    - name: "Install the HDF Management Pack"
      shell: "echo yes | ambari-server install-mpack --mpack={{ hdf_main_repo_url }}/tars/hdf_ambari_mp/{{ mpack_filename }}"
      notify: Restart ambari-server
      args:
        creates: "/var/lib/ambari-server/resources/mpacks/{{ mpack_filename | regex_replace('.tar.gz$','') }}"
      when: hdf_major_version|int >= 3

    - name: "Install the HDF Management Pack (with --purge)"
      shell: "echo yes | ambari-server install-mpack --mpack={{ hdf_main_repo_url }}/tars/hdf_ambari_mp/{{ mpack_filename }} --purge"
      notify: Restart ambari-server
      args:
        creates: "/var/lib/ambari-server/resources/mpacks/{{ mpack_filename | regex_replace('.tar.gz$','') }}"
      when: hdf_major_version|int < 3

    - meta: flush_handlers

    - name: "Modify the HDF base_url repository for HDF {{ hdf_minor_version }}"
      uri:
        url: http://{{ ansible_fqdn }}:8080/api/v1/stacks/HDF/versions/{{ hdf_minor_version }}/{{ main_os_target }}/repositories/HDF-{{ hdf_minor_version }}
        method: PUT
        force_basic_auth: yes
        user: "{{ ambari_admin_user }}"
        password: "{{ ambari_admin_password }}"
        headers: '{"X-Requested-By":"ambari"}'
        body: " {\"Repositories\" : { \"base_url\" : \"{{ hdf_main_repo_url }}\", \"verify_base_url\": true } }"
        body_format: raw
        status_code: 200,201,202
        return_content: no

    - name: "Modify the HDP-UTILS base_url repository for HDF {{ hdf_minor_version }}"
      uri:
        url: http://{{ ansible_fqdn }}:8080/api/v1/stacks/HDF/versions/{{ hdf_minor_version }}/{{ utils_os_target }}
        method: PUT
        force_basic_auth: yes
        user: "{{ ambari_admin_user }}"
        password: "{{ ambari_admin_password }}"
        headers: '{"X-Requested-By":"ambari"}'
        body: " {\"Repositories\" : { \"base_url\" : \"{{ utils_repo_url }}\", \"verify_base_url\": true } }"
        body_format: raw
        status_code: 200,201,202
        return_content: no
  when: install_hdf is defined and install_hdf
