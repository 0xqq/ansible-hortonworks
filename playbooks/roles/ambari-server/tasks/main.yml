---
- name: Load variables
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_os_family|lower }}-{{ ansible_distribution|lower }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_os_family|lower }}-{{ ansible_distribution|lower }}.yml"
        - "{{ ansible_os_family|lower }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_os_family|lower }}.yml"
        - defaults.yml
      paths:
        - ../vars

- name: Install the ambari-server package (yum)
  yum:
    name: ambari-server
    update_cache: yes
    state: latest
  notify: Reload systemd
  when: ansible_os_family|lower == "redhat"

- name: Install the ambari-server package (apt)
  apt:
    name: ambari-server
    update_cache: yes
    state: latest
  when: ansible_os_family|lower == "debian"

- meta: flush_handlers

- name: Set the Ambari Server Java setup option (OpenJDK)
  set_fact:
    ambari_java_options: "-j {{ openjdk_path }}"
  when: java == "openjdk"

- name: Set the Ambari Server Java setup option (Oracle JDK)
  set_fact:
    ambari_java_options: "-j {{ oraclejdk.base_folder }}/latest"
  when: java == "oraclejdk"

- name: Run Ambari Server setup
  shell: /usr/sbin/ambari-server setup -s {{ ambari_java_options|default("") }}
  notify: Restart ambari-server

- meta: flush_handlers

- name: Make sure all of the Ambari Agents have registered
  uri:
    url: http://{{ ansible_nodename }}:8080/api/v1/hosts/{{ hostvars[item]['ansible_nodename']|lower }}
    method: GET
    force_basic_auth: yes
    user: admin
    password: admin
    headers: '{"X-Requested-By":"ambari"}'
    status_code: 200,201,202,404
    return_content: no
  with_items: "{{ groups['hadoop-cluster'] }}"
  register: result
  until: "result.status != 404"
  retries: 100
  delay: 5
