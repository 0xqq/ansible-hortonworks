{
  "configurations" : [
{% if product.name|lower == 'hdf' %}
    {
      "nifi-ambari-config" : {
        "nifi.node.ssl.port": "9091",
        "nifi.node.port": "9090",
        "nifi.security.encrypt.configuration.password": "{{ default_password }}",
        "nifi.sensitive.props.key": "{{ default_password }}"
      }
    },
    {
      "nifi-env" : {
        "nifi_group" : "nifi",
        "nifi_user" : "nifi"
      }
    },
{% else %}
    {
      "hadoop-env" : {
        "dtnode_heapsize" : "1024m",
        "namenode_heapsize" : "2048m",
        "namenode_opt_maxnewsize" : "384m",
        "namenode_opt_newsize" : "384m"
      }
    },
    {
      "hdfs-site" : {
        {% if namenode_groups|length > 1 -%}
        "dfs.client.failover.proxy.provider.{{ cluster_name }}" : "org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider",
        "dfs.ha.automatic-failover.enabled" : "true",
        "dfs.ha.fencing.methods" : "shell(/bin/true)",
        "dfs.ha.namenodes.{{ cluster_name }}" : "nn1,nn2",
        "dfs.namenode.http-address.{{ cluster_name }}.nn1" : "%HOSTGROUP::{{ namenode_groups[0] }}%:50070",
        "dfs.namenode.http-address.{{ cluster_name }}.nn2" : "%HOSTGROUP::{{ namenode_groups[1] }}%:50070",
        "dfs.namenode.https-address.{{ cluster_name }}.nn1" : "%HOSTGROUP::{{ namenode_groups[0] }}%:50470",
        "dfs.namenode.https-address.{{ cluster_name }}.nn2" : "%HOSTGROUP::{{ namenode_groups[1] }}%:50470",
        "dfs.namenode.rpc-address.{{ cluster_name }}.nn1" : "%HOSTGROUP::{{ namenode_groups[0] }}%:8020",
        "dfs.namenode.rpc-address.{{ cluster_name }}.nn2" : "%HOSTGROUP::{{ namenode_groups[1] }}%:8020",
        "dfs.namenode.shared.edits.dir" : "qjournal://{% for jn in journalnode_groups %}%HOSTGROUP::{{ jn }}%:8485{% if not loop.last %};{% endif %}{% endfor %}/{{ cluster_name }}",
        "dfs.nameservices" : "{{ cluster_name }}",
        {% endif -%}
        "dfs.datanode.data.dir" : "/hadoop/hdfs/data",
        "dfs.datanode.failed.volumes.tolerated" : "0",
        "dfs.replication" : "3"
      }
    },
    {
      "yarn-site" : {
        {% if resourcemanager_groups|length > 1 -%}
        "hadoop.registry.zk.quorum": "{% for zk in zookeeper_groups %}%HOSTGROUP::{{ zk }}%:2181{% if not loop.last %},{% endif %}{% endfor %}",
        "yarn.resourcemanager.recovery.enabled": "true",
        "yarn.resourcemanager.store.class" : "org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore",
        "yarn.resourcemanager.cluster-id" : "yarn-cluster",
        "yarn.resourcemanager.ha.enabled" : "true",
        "yarn.resourcemanager.ha.automatic-failover.zk-base-path" : "/yarn-leader-election",
        "yarn.resourcemanager.ha.rm-ids" : "rm1,rm2",
        "yarn.resourcemanager.address": "%HOSTGROUP::{{ resourcemanager_groups[0] }}%:8050",
        "yarn.resourcemanager.scheduler.address": "%HOSTGROUP::{{ resourcemanager_groups[0] }}%:8030",
        "yarn.resourcemanager.resource-tracker.address": "%HOSTGROUP::{{ resourcemanager_groups[0] }}%:8025",
        "yarn.resourcemanager.admin.address": "%HOSTGROUP::{{ resourcemanager_groups[0] }}%:8141",
        "yarn.resourcemanager.hostname": "%HOSTGROUP::{{ resourcemanager_groups[0] }}%:8088",
        "yarn.resourcemanager.hostname.rm1": "%HOSTGROUP::{{ resourcemanager_groups[0] }}%",
        "yarn.resourcemanager.hostname.rm2": "%HOSTGROUP::{{ resourcemanager_groups[1] }}%",
        "yarn.resourcemanager.webapp.address": "%HOSTGROUP::{{ resourcemanager_groups[0] }}%:8088",
        "yarn.resourcemanager.webapp.address.rm1": "%HOSTGROUP::{{ resourcemanager_groups[0] }}%:8088",
        "yarn.resourcemanager.webapp.address.rm2": "%HOSTGROUP::{{ resourcemanager_groups[1] }}%:8088",
        "yarn.resourcemanager.webapp.https.address": "%HOSTGROUP::{{ resourcemanager_groups[0] }}%:8090",
        "yarn.resourcemanager.webapp.https.address.rm1": "%HOSTGROUP::{{ resourcemanager_groups[0] }}%:8090",
        "yarn.resourcemanager.webapp.https.address.rm2": "%HOSTGROUP::{{ resourcemanager_groups[1] }}%:8090",
        "yarn.resourcemanager.zk-address": "{% for zk in zookeeper_groups %}%HOSTGROUP::{{ zk }}%:2181{% if not loop.last %},{% endif %}{% endfor %}",
        {% endif -%}
        "yarn.client.nodemanager-connect.retry-interval-ms" : "10000"
      }
    },
    {
      "hbase-site" : {
        {% if namenode_groups|length > 1 -%}
        "hbase.rootdir": "hdfs://{{ cluster_name }}/apps/hbase/data",
        {% endif -%}
        "hbase.client.retries.number" : "35"
      }
    },
    {
      "core-site": {
        {% if namenode_groups|length > 1 -%}
        "fs.defaultFS" : "hdfs://{{ cluster_name }}",
        "ha.zookeeper.quorum" : "{% for zk in zookeeper_groups %}%HOSTGROUP::{{ zk }}%:2181{% if not loop.last %},{% endif %}{% endfor %}",
        {% endif -%}
        "fs.trash.interval" : "360"
      }
    },
{% endif %}
    {
      "zoo.cfg": {
        "clientPort" : "2181"
      }
    }
  ],

  "host_groups" : [
    {% for node_group in blueprint_dynamic if groups[node_group.group] is defined and groups[node_group.group]|length > 0 -%}

    {
      "name" : "{{ node_group.group }}",
      "configurations" : [ ],
      "components" : [
        {% for client in node_group.clients -%}
        { "name" : "{{ client }}" },
        {% endfor %}

        {% for service in node_group.services -%}
        { "name" : "{{ service }}" }{% if not loop.last %},{% endif %}

        {% endfor %}

      ]
    }{% if not loop.last and groups[node_group.group]|length > 0 %},{% endif %}

    {% endfor %}

  ],
  "Blueprints" : {
    "stack_name" : "{{ product.name|upper }}",
    "stack_version" : "{{ product.version | regex_replace('.[0-9]+.[0-9]+[0-9_-]*$','') }}"
  }
}
