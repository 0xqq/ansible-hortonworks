---
- name: Load variables
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_os_family|lower }}-{{ ansible_distribution|lower }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_os_family|lower }}-{{ ansible_distribution|lower }}.yml"
        - "{{ ansible_os_family|lower }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_os_family|lower }}.yml"
        - defaults.yml
      paths:
        - ../vars

- name: Install epel
  yum:
    name: epel-release
    state: installed
  ignore_errors: true
  register: epel_result
  when: ansible_os_family|lower == "redhat"

- name: Install epel from rpm
  yum:
    name: "{{ epel_url }}"
    state: installed
  when: ansible_os_family|lower == "redhat" and epel_result|failed

- name: Install required packages
  package:
    name: "{{ item }}"
    update_cache: yes
    state: present
  with_items: "{{ packages|default([]) }}"

- name: Install Java
  include: java.yml
  when: java != "embedded"

- name: Make sure the NTP service is started
  service:
    name: "{{ ntp_service_name }}"
    state: started
    enabled: yes

- name: Add mappings to /etc/hosts
  lineinfile:
    dest: /etc/hosts
    line: "{{ hostvars[item]['ansible_'~hostvars[item].ansible_default_ipv4.alias]['ipv4']['address'] }} {{ hostvars[item]['ansible_nodename'] }}"
    insertafter: "^127..*$"
    state: present
  with_items:
    - "{{ groups['hadoop-cluster']|sort(reverse=True) }}"
  when: not external_dns

- name: Set nofile and nproc limits
  blockinfile:
    dest: /etc/security/limits.d/99-hadoop.conf
    create: yes
    mode: 0644
    block: |
      * soft nofile 32768
      * hard nofile 32768
      * soft nproc 32768
      * hard nproc 32768
    marker: "# {mark} ANSIBLE MANAGED BLOCK"

- name: Set swappiness to {{ swappiness }}
  sysctl:
    name: vm.swappiness
    value: "{{ swappiness }}"
    state: present
    reload: yes
    ignoreerrors: yes

- name: Disable selinux
  selinux:
    state: disabled
  when: ansible_os_family|lower == "redhat" and ansible_distribution|lower != "amazon"

- name: Disable Transparent Huge Pages until the next reboot
  shell: echo never > /sys/kernel/mm/transparent_hugepage/enabled && echo never > /sys/kernel/mm/transparent_hugepage/defrag
  args:
    removes: /sys/kernel/mm/transparent_hugepage/enabled

- name: Disable Transparent Huge Pages in Grub 2
  lineinfile:
    dest: /etc/default/grub
    state: present
    line: 'GRUB_CMDLINE_LINUX=$GRUB_CMDLINE_LINUX" transparent_hugepage=never"'
  when: (ansible_os_family|lower == "redhat" or ansible_os_family|lower == "debian") and (ansible_distribution_major_version|int >= 7)
  notify: Generate the Grub config file

- meta: flush_handlers

- name: Configure tuned (RHEL/CentOS 7)
  include: tuned.yml
  when: ansible_os_family|lower == "redhat" and ansible_distribution_major_version|int == 7

- name: Download the Ambari repository definition
  get_url:
    url: "{{ ambari_repo_url }}"
    dest: "{{ ambari_repo_destination }}"
    force: yes

- name: Add Ambari repository key (apt)
  apt_key:
    keyserver: "{{ ambari_repo_keyserver }}"
    id: "{{ ambari_repo_key }}"
  when: ansible_os_family|lower == "debian"
